pipeline {
    agent any
    stages {
        stage('Genrate Dockerfiles') {
            environment {
              SAPMACHINE_GIT_REPO = 'github.com/SAP/SapMachine.git'
              SAPMACHINE_GIT_BRANCH = 'sapmachine'
              SAPMACHINE_ARCHIVE_NAME_PREFIX = 'sapmachine_linux-x64'
              SAPMACHINE_PUBLISH_GITHUB_TOKEN = credentials('SapMachine-Github-Token')
              SAPMACHINE_PUBLISH_GITHUB_REPO_NAME = 'SapMachine'
              SAPMACHINE_PUBLISH_GITHUB_USER = 'SAP'
            }

            steps {
              withCredentials([
                  [$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD'],
                  ]
                  ) {
                sh '''
                  docker/generate_dockerfile.sh jre
                  docker/generate_dockerfile.sh
                  docker/generate_dockerfile_jtreg.sh jre
                  docker/generate_dockerfile_jtreg.sh
                  '''
                }
            }
        }
        stage('Run Tests') {
          steps {
          build job: 'test-docker', propagate: false, wait: true, parameters:
              [
                  string(name: 'GIT_TAG_NAME', value: VERSION_TAG),
                  string(name: 'test_suite', value: 'hotspot'),
                  string(name: 'test_groups', value: ':hotspot_tier1')
              ]

          build job: 'test-docker', propagate: false, wait: true, parameters:
              [
                  string(name: 'GIT_TAG_NAME', value: VERSION_TAG),
                  string(name: 'test_suite', value: 'jdk'),
                  string(name: 'test_groups', value: ':tier1')
              ]

          build job: 'test-docker', propagate: false, wait: true, parameters:
              [
                  string(name: 'GIT_TAG_NAME', value: VERSION_TAG),
                  string(name: 'test_suite', value: 'langtools'),
                  string(name: 'test_groups', value: 'jdk tools lib')
              ]
          }
        }
        stage ('Publish Images') {
          steps {
            withCredentials([
                [$class: 'UsernamePasswordMultiBinding', credentialsId: 'docker-sapmachine', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD']
                ]
                ) {
              sh '''
                docker/build-and-push.sh
                docker/build-and-push.sh jre
                '''
              }
            }
        }
    }
}
