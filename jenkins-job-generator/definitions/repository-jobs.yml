- job:
    name: repository-update-and-tag
    description: 'Update SapMachine repository from OpenJDK, tag and build SapMachine releases and create OpenJDK merge PRs.'
    project-type: pipeline
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 60
    parameters:
        - bool:
            name: UPDATE_REPOSITORY
            default: true
            description: 'Update SapMachine repository from OpenJDK.'
        - bool:
            name: TAG_BUILD_AND_MERGE
            default: true
            description: 'Tag new SapMachine releases, build them and create OpenJDK merge PRs.'
    triggers:
        - timed: "@midnight"
    dsl: |
        pipeline {
            agent {
                label "repository"
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        sh '''#!/bin/bash
                            set -ex
                            if [ ! -d SapMachine-infrastructure ]; then
                              git init SapMachine-infrastructure
                            fi
                            cd SapMachine-infrastructure
                            git fetch --depth 1 https://github.com/SAP/SapMachine-infrastructure.git master
                            git checkout --detach FETCH_HEAD
                        '''
                    }
                }
                stage('Update SapMachine Repository') {
                    when {
                        expression { params.UPDATE_REPOSITORY == true }
                    }
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                            sh '''
                                openjdk_repositories=$(python3 SapMachine-infrastructure/lib/list_openjdk_repositories.py)
                                for i in ${openjdk_repositories}
                                do
                                    :
                                    SapMachine-infrastructure/lib/update_repo.sh $i
                                done
                            '''
                        }
                    }
                }
                stage("Checkout SapMachine Repository") {
                    when {
                        expression { params.TAG_BUILD_AND_MERGE == true }
                    }
                    steps {
                        sh '''#!/bin/bash
                            set -ex
                            if [ ! -d SapMachine ]; then
                              git init SapMachine && cd SapMachine
                              git remote add origin https://github.com/SAP/SapMachine.git
                            else
                              cd SapMachine
                            fi
                            git fetch origin
                            git checkout sapmachine
                        '''
                    }
                }
                stage('Tag, Build and Merge') {
                    agent {
                        dockerfile {
                            dir "SapMachine-infrastructure/dockerfiles/infrastructure"
                            reuseNode true
                            label "repository"
                        }
                    }
                    when {
                        beforeAgent true
                        expression { params.TAG_BUILD_AND_MERGE == true }
                    }
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                            sh("cd SapMachine && python3 ../SapMachine-infrastructure/lib/tag_build_and_merge.py")
                        }
                    }
                }
            }
        }

- job:
    name: async-prof-repo-update
    description: 'Update Async Profiler repository.'
    project-type: pipeline
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 60
    triggers:
        - timed: "@midnight"
    dsl: |
        pipeline {
            agent {
                label "repository"
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-infrastructure']], userRemoteConfigs: [[url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }
                }
                stage("Checkout Repository") {
                    steps {
                        checkout changelog: true, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/sap']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'async-profiler']], userRemoteConfigs: [[url: 'https://github.com/SAP/async-profiler.git']]]
                    }
                }
                stage('Merge') {
                    agent {
                        dockerfile {
                            dir "SapMachine-infrastructure/dockerfiles/infrastructure"
                            reuseNode true
                            label "repository"
                        }
                    }
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                            script {
                                env.ASYNC_PROF_BUILD_REQUIRED = sh(
                                        script: "SapMachine-infrastructure/lib/merge_async_prof.sh",
                                        returnStatus: true
                                )
                            }
                        }
                    }
                }
                stage('Check Release') {
                    agent {
                        dockerfile {
                            dir "SapMachine-infrastructure/dockerfiles/infrastructure"
                            reuseNode true
                            label "repository"
                        }
                    }
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                            script {
                                env.ASYNC_PROF_RELEASE_TAG = sh(
                                        script: "python3 SapMachine-infrastructure/lib/async_check_release.py",
                                        returnStdout: true
                                )
                            }
                        }
                    }
                }
                stage ('Trigger Snapshot Builds') {
                    when {
                        expression { env.ASYNC_PROF_BUILD_REQUIRED != "1" }
                    }
                    steps {
                        parallel (
                            linux_aarch64: {
                                build job: 'build-async-profiler-official-snapshot-linux_aarch64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap')]
                            },
                            linux_ppc64le: {
                                build job: 'build-async-profiler-official-snapshot-linux_ppc64le', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap')]
                            },
                            linux_x86_64: {
                                build job: 'build-async-profiler-official-snapshot-linux_x86_64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap')]
                            },
                            macos_x86_64: {
                                build job: 'build-async-profiler-official-snapshot-macos_x86_64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap')]
                            },
                            macos_aarch64: {
                                build job: 'build-async-profiler-official-snapshot-macos_aarch64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap')]
                            },
                            failFast: false
                        )
                    }
                }
                stage ('Trigger Release Builds') {
                    when {
                        expression { env.ASYNC_PROF_RELEASE_TAG != "No new releases" }
                    }
                    steps {
                        parallel (
                            linux_aarch64: {
                                build job: 'build-async-profiler-official-release-linux_aarch64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap'), string(name: 'GIT_TAG_NAME', value: env.ASYNC_PROF_RELEASE_TAG), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                            },
                            linux_ppc64le: {
                                build job: 'build-async-profiler-official-release-linux_ppc64le', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap'), string(name: 'GIT_TAG_NAME', value: env.ASYNC_PROF_RELEASE_TAG), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                            },
                            linux_x86_64: {
                                build job: 'build-async-profiler-official-release-linux_x86_64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap'), string(name: 'GIT_TAG_NAME', value: env.ASYNC_PROF_RELEASE_TAG), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                            },
                            macos_x86_64: {
                                build job: 'build-async-profiler-official-release-macos_x86_64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap'), string(name: 'GIT_TAG_NAME', value: env.ASYNC_PROF_RELEASE_TAG), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                            },
                            macos_aarch64: {
                                build job: 'build-async-profiler-official-release-macos_aarch64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap'), string(name: 'GIT_TAG_NAME', value: env.ASYNC_PROF_RELEASE_TAG), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                            },
                            failFast: false
                        )
                    }
                }
            }
        }
