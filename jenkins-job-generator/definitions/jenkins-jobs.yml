- job:
    name: jenkins-job-generator
    description: 'Generate/Update Jenkins jobs from templates.'
    project-type: freestyle
    concurrent: false
    node: repository
    properties:
        - build-discarder:
            num-to-keep: 20
        - github:
            url: 'https://github.com/SAP/SapMachine-infrastructure'
    scm:
        - git:
            url: 'https://github.com/SAP/SapMachine-infrastructure'
            branches:
                - master
            included-regions:
                - 'jenkins-job-generator/.*'
    triggers:
        - github
    wrappers:
        - credentials-binding:
            - username-password-separated:
                credential-id: SapMachine-github
                username: JENKINS_USER
                password: JENKINS_PASSWORD
        - docker-custom-build-env:
            image-type: 'dockerfile'
            context-path: "dockerfiles/infrastructure"
    builders:
        - shell: "export HOME=$WORKSPACE_TMP && cd jenkins-job-generator && jenkins-jobs --conf jenkins_jobs_default.ini --user ${JENKINS_USER} --password ${JENKINS_PASSWORD} update --delete-old ./definitions"

- job:
    name: jenkins-configuration-backup
    description: 'Creates a Jenkins configuration backup.'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 30
    triggers:
        - timed: "@midnight"
    dsl: |
        pipeline {
            agent {
                node {
                    label 'built-in'
                }
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        sh '''#!/bin/bash
                            set -ex
                            git init --initial-branch=master SapMachine-infrastructure && cd SapMachine-infrastructure
                            git fetch --depth 1 https://github.com/SAP/SapMachine-infrastructure.git master
                            git checkout --detach FETCH_HEAD
                        '''
                    }
                }
                stage('Backup') {
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                            sh('python3 SapMachine-infrastructure/lib/jenkins_backup.py -s /var/jenkins_home')
                        }
                    }
                }
            }
            post {
                cleanup {
                    cleanWs deleteDirs: true, disableDeferredWipeout: true
                }
            }
        }

- job:
    name: jenkins-configuration-restore
    description: 'Restores a Jenkins configuration backup.'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 20
    dsl: |
        pipeline {
            agent {
                node {
                    label 'built-in'
                }
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        sh '''#!/bin/bash
                            set -ex
                            git init --initial-branch=master SapMachine-infrastructure && cd SapMachine-infrastructure
                            git fetch --depth 1 https://github.com/SAP/SapMachine-infrastructure.git master
                            git checkout --detach FETCH_HEAD
                        '''
                    }
                }
                stage('Backup') {
                    steps {
                        sh('python3 SapMachine-infrastructure/lib/jenkins_restore.py -t /var/jenkins_home --install-plugins')
                    }
                }
            }
            post {
                cleanup {
                    cleanWs deleteDirs: true, disableDeferredWipeout: true
                }
            }
        }
