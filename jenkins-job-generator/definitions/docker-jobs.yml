- job:
    name: docker-manifest
    description: 'Generates the docker manifest for using at docker-library/official-images.'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 50
    dsl: |
        pipeline {
            agent {
                label "docker"
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-infrastructure']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }
                }
                stage('Generate Manifest') {
                    agent {
                        dockerfile {
                            dir "SapMachine-infrastructure/dockerfiles/infrastructure"
                            reuseNode true
                            label "docker"
                        }
                    }
                    steps {
                        sh "cd SapMachine-infrastructure && python3 lib/make_docker_manifest.py -d dockerfiles/official -m ../sapmachine.manifest"
                        archiveArtifacts 'sapmachine.manifest'
                    }
                }
            }
            post {
                cleanup {
                    cleanWs deleteDirs: true, disableDeferredWipeout: true
                }
            }
        }

- job:
    name: generate-dockerfiles
    description: 'Regenerates and updates docker files for SapMachine official images.'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 50
    parameters:
        - bool:
            name: FORCE
            default: false
            description: 'Force recreation of dockerfiles, even if latest versions are already tagged.'
    dsl: |
        pipeline {
            agent {
                label "docker"
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-infrastructure']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }
                }
                stage('Generate Dockerfiles') {
                    agent {
                        dockerfile {
                            dir "SapMachine-infrastructure/dockerfiles/infrastructure"
                            reuseNode true
                            label "docker"
                        }
                    }
                    steps {
                        script {
                            if (params.FORCE == true) {
                                env.FORCE_REGENERATE=" --force"
                            } else {
                                env.FORCE_REGENERATE=""
                            }
                        }
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']]) {
                            sh "cd SapMachine-infrastructure && python3 lib/generate_dockerfiles.py $FORCE_REGENERATE"
                        }
                    }
                }
            }
            post {
                cleanup {
                    cleanWs deleteDirs: true, disableDeferredWipeout: true
                }
            }
        }
