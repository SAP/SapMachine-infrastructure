pipeline {
    agent {
        dockerfile { dir 'build-pipe/docker/ubuntu_16_04_x86_64' }
    }
    stages {
        stage('Build') {
            environment {
              SAPMACHINE_GIT_REPO = 'github.com/SAP/SapMachine.git'
              SAPMACHINE_PUBLISH_GITHUB_TOKEN = credentials('SapMachine-Github-Token')
              SAPMACHINE_PUBLISH_GITHUB_REPO_NAME = 'SapMachine'
              SAPMACHINE_PUBLISH_GITHUB_USER = 'SAP'
            }
            steps {
              withCredentials([
                  [$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']
                  ]) {
                sh '''
                  build-pipe/build.sh
                  '''
                }
            }
            post {
                success {
                    junit 'gtest.xml'
                }
            }
        }
        stage('Archive') {
            steps {
                archive 'build.tar.gz'
            }
        }
        stage('Run Tests') {
            when {
                expression { params.RUN_TESTS == true }
            }
            steps {
            build job: HOTSPOT_TEST_JOB, propagate: false, wait: true

            build job: JDK_TEST_JOB, propagate: false, wait: true

            build job: LANGTOOLS_TEST_JOB, propagate: false, wait: true

            }
        }
        stage('Publish') {
            when {
                expression { params.PUBLISH == true }
            }
            environment {
              SAPMACHINE_GIT_REPO = 'github.com/SAP/SapMachine.git'
              SAPMACHINE_GIT_BRANCH = 'sapmachine'
              SAPMACHINE_PUBLISH_GITHUB_TOKEN = credentials('SapMachine-Github-Token')
              SAPMACHINE_PUBLISH_GITHUB_REPO_NAME = 'SapMachine'
              SAPMACHINE_PUBLISH_GITHUB_USER = 'SAP'
            }
            steps {
                sh '''
                build-pipe/publish.sh
                '''
            }
        }
    }
}
